security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            id: App\Security\UserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login_check
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: app.jwt_authentication_success_handler
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

        main:
            lazy: true
            provider: app_user_provider

        two_factor:
            pattern: ^/api/2fa/verify
            stateless: true
            provider: app_user_provider
            jwt: ~

    access_control:
        - { path: ^/api/login_check, roles: PUBLIC_ACCESS }
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/verify-email, roles: PUBLIC_ACCESS }
        - { path: ^/api/contact, roles: PUBLIC_ACCESS }
        - { path: ^/api/products$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/products/\d+$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/categories$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/categories/\d+$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/reviews$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/reviews/\d+$, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/home, roles: PUBLIC_ACCESS }
        - { path: ^/api/orders$, methods: [ GET ], roles: ROLE_ADMIN }
        - { path: ^/api/orders/\d+$, methods: [ GET ], roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/orders_details/\d+$, methods: [ GET ], roles: IS_AUTHENTICATED_FULLY }docker exec -it projet-annuel-db-1 bashdocker exec -it projet-annuel-web-1 bash
        - { path: ^/api/tags, methods: [ GET ], roles: PUBLIC_ACCESS }
        - { path: ^/api/upload, roles: ROLE_ADMIN }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY  }
        - { path: ^/api/2fa/verify, roles: IS_AUTHENTICATED_ANONYMOUSLY }